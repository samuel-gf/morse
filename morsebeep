#!/bin/bash

# Default parameters
F=880                   # Frequency
D1=0.05                 # Length of dot is one unit
S=false					# Show dots and dash in screen
INPUT=""
if [ -p /dev/stdin ]; then
	INPUT=$(cat /dev/stdin)
fi


# FUNCTIONS -----------------------------------------------------------------

# Placement of "-t alsa" is critical. So do not change the order of parameters
function dot()
{
    play -nq -t alsa synth $D1 square $F
	if [ "$S" = "true" ]; then printf "."; fi
}

function dash()
# Placement of "-t alsa" is critical. So do not change the order of parameters
{
    play -nq -t alsa synth $D3 square $F
	if [ "$S" = "true" ]; then printf "-"; fi
}

function w1() # Wait 1 unit
{
	sleep $D1
	if [ "$S" = "true" ]; then printf ""; fi
}

function w3() # Wait 3 units
{
    sleep $D3
	if [ "$S" = "true" ]; then printf "   "; fi
}

function w7() # Wait 7 units
{
    sleep $D7
	if [ "$S" = "true" ]; then printf "\n"; fi
}

function usage() # Help usage --help
{
	echo "Usage: $ $(basename $0) <parameters>"
	echo
	echo "       PARAMETERS"
	echo "        -f <frequency> tone of sound (default 880)"
	echo "        -m <message>"
	echo "        -t <time>      length of dot (default 0.05)"
	echo "        -s true|false  show dashes and dots (default false)"
	echo "        --help         (this help)"
	echo
	echo "       EXAMPLES"
	echo "        $ $(basename $0) -m sos -f 900"
	echo "        $ $(basename $0) -m \"Hello world\""
	echo "        $ $(basename $0) -m \"Hello world\" -t 0.1 -f 1000"
}


# Parameters -----------------------------------------------------
while [ ! -z $1 ]; do
	case $1 in
		# Frequency
		"-f") shift; F=$1;;

		# Message
		"-m") shift; INPUT=$1;;

		# Help
		"-h" | "--help") usage; exit 0;;

		# Time
		"-t") shift; D1=$1;;

		# Show dashes and dots
		"-s") shift; S=$1;;

		*) usage; exit 1;;
	esac
	shift
done


# Main program ----------------------------------------------

# Length of 3 and 7 units
D3=`echo $D1 \* 3 | bc` # A dash is three units
D7=`echo $D1 \* 7 | bc` # Space between words is seven units


LENGTH=`echo -n $INPUT | wc -m`		# Length of input string


for ((i=0; i<$LENGTH; i++)); do
	c="${INPUT:$i:1}"   # Just one character each time
	c=${c,}             # To lower
	case $c in
		" ") w7;;		# End of word. Wait 7 units
		"a" | "á") dot; w1; dash;;
		"b") dash; w1; dot; w1; dot; w1; dot;;
		"c") dash; w1; dot; w1; dash; w1; dot;;
		"d") dash; w1; dot; w1; dot;;
		"e" | "é") dot;;
		"f") dot; w1; dot; w1; dash; w1; dot;;
		"g") dash; w1; dash; w1; dot;;
		"h") dot; w1; dot; w1; dot; w1; dot;;
		"i" | "í") dot; w1; dot;;
		"j") dot; w1; dash; w1; dash; w1; dash;;
		"k") dash; w1; dot; w1; dash;;
		"l") dot; w1; dash; w1; dot; w1; dot;;
		"m") dash; w1; dash;;
		"n") dash; w1; dot;;
		"o" | "ó") dash; w1; dash; w1; dash;;
		"p") dot; w1; dash; w1; dash; w1; dot;;
		"q") dash; w1; dash; w1; dot; w1; dash;;
		"r") dot; w1; dash; w1; dot;;
		"s") dot; w1; dot; w1; dot;;
		"t") dash;;
		"u" | "ú") dot; w1; dot; w1; dash;;
		"v") dot; w1; dot; w1; dot; w1; dash;;
		"w") dot; w1; dash; w1; dash;;
		"x") dash; w1; dot; w1; dot; w1; dash;;
		"y") dash; w1; dot; w1; dash; w1; dash;;
		"z") dash; w1; dash; w1; dot; w1; dot;;
		"1") dot; w1; dash; w1; dash; w1; dash; w1; dash;;
		"2") dot; w1; dot; w1; dash; w1; dash; w1; dash;;
		"3") dot; w1; dot; w1; dot; w1; dash; w1; dash;;
		"4") dot; w1; dot; w1; dot; w1; dot; w1; dash;;
		"5") dot; w1; dot; w1; dot; w1; dot; w1; dot;;
		"6") dash; w1; dot; w1; dot; w1; dot; w1; dot;;
		"7") dash; w1; dash; w1; dot; w1; dot; w1; dot;;
		"8") dash; w1; dash; w1; dash; w1; dot; w1; dot;;
		"9") dash; w1; dash; w1; dash; w1; dash; w1; dot;;
		"0") dash; w1; dash; w1; dash; w1; dash; w1; dash;;
	esac
	w3	# End of letter. Wait 3 units. Gap between dots and dashes
done
exit 0
